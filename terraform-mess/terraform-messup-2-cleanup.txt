Last login: Tue Oct 20 14:21:53 on ttys001
dap@zathras ~ $ cd oxide/
dap@zathras oxide $ git clone cockroachdb-testing cockroachdb-testing-cleanup
Cloning into 'cockroachdb-testing-cleanup'...
done.
dap@zathras oxide $ cd !$
cd cockroachdb-testing-cleanup
dap@zathras cockroachdb-testing-cleanup $ cd terraform/
dap@zathras terraform $ vim aws.tf 
dap@zathras terraform $ terraform init

Initializing the backend...

Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.

Initializing provider plugins...
- Finding hashicorp/null versions matching "2.1.2"...
- Finding hashicorp/aws versions matching "~> 2.0"...
- Installing hashicorp/aws v2.70.0...
- Installed hashicorp/aws v2.70.0 (signed by HashiCorp)
- Installing hashicorp/null v2.1.2...
- Installed hashicorp/null v2.1.2 (signed by HashiCorp)

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
dap@zathras terraform $ echo 'downloaded old version from s3'
downloaded old version from s3
dap@zathras terraform $ ls -l ../crdb-exploration-test 
-rw-rw-rw-@ 1 dap  staff  10255 Oct 20 14:32 ../crdb-exploration-test
dap@zathras terraform $ less ../crdb-exploration-test 
dap@zathras terraform $ aws s3 cp ../crdb-exploration-test s3://oxide-terraform-backend/crdb-exploration-test
upload: ../crdb-exploration-test to s3://oxide-terraform-backend/crdb-exploration-test
dap@zathras terraform $ terraform refresh
aws_vpc.crdb_exploration: Refreshing state... [id=vpc-0e01d5cfe95fb12af]
aws_internet_gateway.gw: Refreshing state... [id=igw-04fa14e3cc1ece621]
aws_security_group.crdb_exploration: Refreshing state... [id=sg-0addf609b0e6b2c3c]
aws_subnet.crdb_exploration: Refreshing state... [id=subnet-085deecfd10a92421]
aws_route.r: Refreshing state... [id=r-rtb-0d8c8c0e40cdfc1dd1080289494]
aws_security_group_rule.crdb_exploration_local_in: Refreshing state... [id=sgrule-855786104]
aws_security_group_rule.crdb_exploration_out: Refreshing state... [id=sgrule-2831093523]
aws_security_group_rule.crdb_exploration_ssh: Refreshing state... [id=sgrule-3808307800]

Outputs:

db_external_ip = [
  null,
  null,
  null,
]
db_internal_ip = [
  null,
  null,
  null,
]
loadgen_external_ip = [
  null,
]
loadgen_internal_ip = [
  null,
]
mon_external_ip = [
  null,
]
mon_internal_ip = [
  null,
]
nvmedb_external_ip = []
nvmedb_internal_ip = []
dap@zathras terraform $ terraform destroy
aws_vpc.crdb_exploration: Refreshing state... [id=vpc-0e01d5cfe95fb12af]
aws_internet_gateway.gw: Refreshing state... [id=igw-04fa14e3cc1ece621]
aws_subnet.crdb_exploration: Refreshing state... [id=subnet-085deecfd10a92421]
aws_security_group.crdb_exploration: Refreshing state... [id=sg-0addf609b0e6b2c3c]
aws_route.r: Refreshing state... [id=r-rtb-0d8c8c0e40cdfc1dd1080289494]
aws_security_group_rule.crdb_exploration_out: Refreshing state... [id=sgrule-2831093523]
aws_security_group_rule.crdb_exploration_ssh: Refreshing state... [id=sgrule-3808307800]
aws_security_group_rule.crdb_exploration_local_in: Refreshing state... [id=sgrule-855786104]

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # aws_internet_gateway.gw will be destroyed
  - resource "aws_internet_gateway" "gw" {
      - arn      = "arn:aws:ec2:us-west-2:128433874814:internet-gateway/igw-04fa14e3cc1ece621" -> null
      - id       = "igw-04fa14e3cc1ece621" -> null
      - owner_id = "128433874814" -> null
      - tags     = {
          - "Name" = "crdb_exploration"
        } -> null
      - vpc_id   = "vpc-0e01d5cfe95fb12af" -> null
    }

  # aws_route.r will be destroyed
  - resource "aws_route" "r" {
      - destination_cidr_block = "0.0.0.0/0" -> null
      - gateway_id             = "igw-04fa14e3cc1ece621" -> null
      - id                     = "r-rtb-0d8c8c0e40cdfc1dd1080289494" -> null
      - origin                 = "CreateRoute" -> null
      - route_table_id         = "rtb-0d8c8c0e40cdfc1dd" -> null
      - state                  = "active" -> null
    }

  # aws_security_group.crdb_exploration will be destroyed
  - resource "aws_security_group" "crdb_exploration" {
      - arn                    = "arn:aws:ec2:us-west-2:128433874814:security-group/sg-0addf609b0e6b2c3c" -> null
      - description            = "Managed by Terraform" -> null
      - egress                 = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - description      = ""
              - from_port        = 0
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "-1"
              - security_groups  = []
              - self             = false
              - to_port          = 0
            },
        ] -> null
      - id                     = "sg-0addf609b0e6b2c3c" -> null
      - ingress                = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - description      = ""
              - from_port        = 22
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = []
              - self             = false
              - to_port          = 22
            },
          - {
              - cidr_blocks      = []
              - description      = ""
              - from_port        = 0
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "-1"
              - security_groups  = []
              - self             = true
              - to_port          = 0
            },
        ] -> null
      - name                   = "crdb_exploration" -> null
      - owner_id               = "128433874814" -> null
      - revoke_rules_on_delete = false -> null
      - tags                   = {
          - "Name" = "crdb_exploration"
        } -> null
      - vpc_id                 = "vpc-0e01d5cfe95fb12af" -> null
    }

  # aws_security_group_rule.crdb_exploration_local_in will be destroyed
  - resource "aws_security_group_rule" "crdb_exploration_local_in" {
      - cidr_blocks              = [] -> null
      - from_port                = 0 -> null
      - id                       = "sgrule-855786104" -> null
      - ipv6_cidr_blocks         = [] -> null
      - prefix_list_ids          = [] -> null
      - protocol                 = "-1" -> null
      - security_group_id        = "sg-0addf609b0e6b2c3c" -> null
      - self                     = false -> null
      - source_security_group_id = "sg-0addf609b0e6b2c3c" -> null
      - to_port                  = 0 -> null
      - type                     = "ingress" -> null
    }

  # aws_security_group_rule.crdb_exploration_out will be destroyed
  - resource "aws_security_group_rule" "crdb_exploration_out" {
      - cidr_blocks       = [
          - "0.0.0.0/0",
        ] -> null
      - from_port         = 0 -> null
      - id                = "sgrule-2831093523" -> null
      - ipv6_cidr_blocks  = [] -> null
      - prefix_list_ids   = [] -> null
      - protocol          = "-1" -> null
      - security_group_id = "sg-0addf609b0e6b2c3c" -> null
      - self              = false -> null
      - to_port           = 0 -> null
      - type              = "egress" -> null
    }

  # aws_security_group_rule.crdb_exploration_ssh will be destroyed
  - resource "aws_security_group_rule" "crdb_exploration_ssh" {
      - cidr_blocks       = [
          - "0.0.0.0/0",
        ] -> null
      - from_port         = 22 -> null
      - id                = "sgrule-3808307800" -> null
      - ipv6_cidr_blocks  = [] -> null
      - prefix_list_ids   = [] -> null
      - protocol          = "tcp" -> null
      - security_group_id = "sg-0addf609b0e6b2c3c" -> null
      - self              = false -> null
      - to_port           = 22 -> null
      - type              = "ingress" -> null
    }

  # aws_subnet.crdb_exploration will be destroyed
  - resource "aws_subnet" "crdb_exploration" {
      - arn                             = "arn:aws:ec2:us-west-2:128433874814:subnet/subnet-085deecfd10a92421" -> null
      - assign_ipv6_address_on_creation = false -> null
      - availability_zone               = "us-west-2a" -> null
      - availability_zone_id            = "usw2-az2" -> null
      - cidr_block                      = "192.168.1.0/24" -> null
      - id                              = "subnet-085deecfd10a92421" -> null
      - map_public_ip_on_launch         = false -> null
      - owner_id                        = "128433874814" -> null
      - tags                            = {
          - "Name" = "crdb_exploration"
        } -> null
      - vpc_id                          = "vpc-0e01d5cfe95fb12af" -> null
    }

  # aws_vpc.crdb_exploration will be destroyed
  - resource "aws_vpc" "crdb_exploration" {
      - arn                              = "arn:aws:ec2:us-west-2:128433874814:vpc/vpc-0e01d5cfe95fb12af" -> null
      - assign_generated_ipv6_cidr_block = false -> null
      - cidr_block                       = "192.168.0.0/16" -> null
      - default_network_acl_id           = "acl-0302124ebacb4e4bb" -> null
      - default_route_table_id           = "rtb-0d8c8c0e40cdfc1dd" -> null
      - default_security_group_id        = "sg-0faa38a7b9bf3aab9" -> null
      - dhcp_options_id                  = "dopt-e5019a9d" -> null
      - enable_classiclink               = false -> null
      - enable_classiclink_dns_support   = false -> null
      - enable_dns_hostnames             = true -> null
      - enable_dns_support               = true -> null
      - id                               = "vpc-0e01d5cfe95fb12af" -> null
      - instance_tenancy                 = "default" -> null
      - main_route_table_id              = "rtb-0d8c8c0e40cdfc1dd" -> null
      - owner_id                         = "128433874814" -> null
      - tags                             = {
          - "Name" = "crdb_exploration"
        } -> null
    }

Plan: 0 to add, 0 to change, 8 to destroy.

Changes to Outputs:
  - db_external_ip      = [
      - null,
      - null,
      - null,
    ] -> null
  - db_internal_ip      = [
      - null,
      - null,
      - null,
    ] -> null
  - loadgen_external_ip = [
      - null,
    ] -> null
  - loadgen_internal_ip = [
      - null,
    ] -> null
  - mon_external_ip     = [
      - null,
    ] -> null
  - mon_internal_ip     = [
      - null,
    ] -> null
  - nvmedb_external_ip  = [] -> null
  - nvmedb_internal_ip  = [] -> null

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

aws_security_group_rule.crdb_exploration_out: Destroying... [id=sgrule-2831093523]
aws_security_group_rule.crdb_exploration_local_in: Destroying... [id=sgrule-855786104]
aws_security_group_rule.crdb_exploration_ssh: Destroying... [id=sgrule-3808307800]
aws_subnet.crdb_exploration: Destroying... [id=subnet-085deecfd10a92421]
aws_route.r: Destroying... [id=r-rtb-0d8c8c0e40cdfc1dd1080289494]
aws_route.r: Destruction complete after 0s
aws_internet_gateway.gw: Destroying... [id=igw-04fa14e3cc1ece621]
aws_security_group_rule.crdb_exploration_local_in: Destruction complete after 0s
aws_subnet.crdb_exploration: Destruction complete after 0s
aws_security_group_rule.crdb_exploration_out: Destruction complete after 1s
aws_security_group_rule.crdb_exploration_ssh: Destruction complete after 1s
aws_security_group.crdb_exploration: Destroying... [id=sg-0addf609b0e6b2c3c]
aws_security_group.crdb_exploration: Destruction complete after 1s
aws_internet_gateway.gw: Still destroying... [id=igw-04fa14e3cc1ece621, 10s elapsed]
aws_internet_gateway.gw: Destruction complete after 10s
aws_vpc.crdb_exploration: Destroying... [id=vpc-0e01d5cfe95fb12af]
aws_vpc.crdb_exploration: Destruction complete after 1s

Destroy complete! Resources: 8 destroyed.
dap@zathras terraform $ aws s3 ls s3://oxide-terraform-backend
2020-10-20 14:00:16      39486 crdb-exploration
2020-10-20 14:34:26        156 crdb-exploration-test
2020-08-24 12:54:46      10891 storage
dap@zathras terraform $ aws s3 cp s3://oxide-terraform-backend/crdb-exploration-test f 
download: s3://oxide-terraform-backend/crdb-exploration-test to ./f 
dap@zathras terraform $ cat f
{
  "version": 4,
  "terraform_version": "0.13.0",
  "serial": 2,
  "lineage": "5a0ff491-52e7-fc83-3570-48cd478dda4e",
  "outputs": {},
  "resources": []
}
dap@zathras terraform $ aws s3 rm s3://oxide-terraform-backend/crdb-exploration-test delete: s3://oxide-terraform-backend/crdb-exploration-test
dap@zathras terraform $ aws s3 ls s3://oxide-terraform-backend
2020-10-20 14:00:16      39486 crdb-exploration
2020-08-24 12:54:46      10891 storage
dap@zathras terraform $ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   aws.tf

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	../crdb-exploration-test
	f

no changes added to commit (use "git add" and/or "git commit -a")
dap@zathras terraform $ rm -f f 
dap@zathras terraform $ rm -f ../crdb-exploration-test 
dap@zathras terraform $ git diff
diff --git a/terraform/aws.tf b/terraform/aws.tf
index 909e202..1717abb 100644
--- a/terraform/aws.tf
+++ b/terraform/aws.tf
@@ -3,7 +3,7 @@
 terraform {
   backend "s3" {
     bucket = "oxide-terraform-backend"
-    key    = "crdb-exploration"
+    key    = "crdb-exploration-test"
     region = "us-west-2"
   }
 }
dap@zathras terraform $ cd ../..
dap@zathras oxide $ rm -rf cockroachdb-testing-cleanup/
dap@zathras oxide $ 
